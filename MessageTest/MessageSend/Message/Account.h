/*
 *     Generated by class-dump 3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.
 */

#import "BasicAccount.h"

#import "ASDynamicAccountClassLoader.h"
#import "AccountCreationProtocol.h"

@interface Account : BasicAccount <ASDynamicAccountClassLoader, AccountCreationProtocol>
{
    unsigned int _isOffline:1;
    unsigned int _autosynchronizingEnabled:1;
    unsigned int _isActive:2;
}

+ (id)basicAccountProperties;
+ (id)newAccountWithDictionary:(id)arg1;
+ (void)loadBundleForAccountClass:(id)arg1;
+ (BOOL)loadBundleForAccountWithProperties:(id)arg1;
+ (BOOL)_shouldUpdateAccountsInPlace;
+ (id)accountWithBasicAccount:(id)arg1;
+ (BOOL)haveAccountsBeenConfigured;
+ (BOOL)isPredefinedAccountType;
+ (id)predefinedValueForKey:(id)arg1;
+ (id)supportedDataclasses;
+ (id)propertiesWhichRequireValidation;
+ (id)readAccountsUsingKey:(id)arg1;
+ (void)saveAccounts:(id)arg1 usingKey:(id)arg2;
+ (void)saveAccountInfoToDefaults;
+ (id)accountTypeString;
+ (id)displayedAccountTypeString;
+ (id)displayedShortAccountTypeString;
+ (void *)keychainProtocol;
+ (id)myFullName;
+ (id)accountPropertiesValueForKey:(id)arg1 value:(id)arg2;
+ (BOOL)allObjectsInArrayAreOffline:(id)arg1;
+ (id)hostname;
+ (BOOL)isSSLEditable;
+ (id)saslProfileName;
- (id)init;
- (void)_initializeState;
- (id)initWithProperties:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setAutosynchronizingEnabled:(BOOL)arg1;
- (void)_queueAccountInfoDidChange;
- (id)propertiesToSave;
- (void)_setAccountProperties:(id)arg1;
- (void)setValueInAccountProperties:(id)arg1 forKey:(id)arg2;
- (void)removeValueInAccountPropertiesForKey:(id)arg1;
- (id)valueInAccountPropertiesForKey:(id)arg1;
- (BOOL)isActive;
- (void)setIsActive:(BOOL)arg1;
- (BOOL)canGoOffline;
- (BOOL)isOffline;
- (void)setIsOffline:(BOOL)arg1;
- (id)displayName;
- (void)setDisplayName:(id)arg1;
- (id)username;
- (void)setUsername:(id)arg1;
- (id)hostname;
- (void)setHostname:(id)arg1;
- (void *)keychainAccessibility;
- (void)setPasswordInKeychain:(id)arg1;
- (void)_removePasswordInKeychain;
- (void)setPassword:(id)arg1;
- (id)passwordFromStoredUserInfo;
- (id)passwordFromKeychain;
- (id)password;
- (id)promptUserForPasswordWithMessage:(id)arg1;
- (BOOL)storesPassword;
- (BOOL)needsCredentials;
- (BOOL)acquireCredentialsWithPassword:(id)arg1;
- (id)managedTag;
- (id)promptUserIfNeededForPasswordWithMessage:(id)arg1;
- (unsigned int)portNumber;
- (unsigned int)defaultPortNumber;
- (unsigned int)defaultSecurePortNumber;
- (unsigned int)keychainPortNumber;
- (void)setPortNumber:(unsigned int)arg1;
- (BOOL)isCommonPortNumber:(unsigned int)arg1;
- (id)serviceName;
- (id)secureServiceName;
- (struct __CFString *)connectionServiceType;
- (void)releaseAllConnections;
- (void)releaseAllForcedConnections;
- (void)validateConnections;
- (BOOL)usesSSL;
- (void)setUsesSSL:(BOOL)arg1;
- (BOOL)allowsTrustPrompt;
- (void)setTryDirectSSL:(BOOL)arg1;
- (id)domain;
- (void)setDomain:(id)arg1;
- (void)accountInfoDidChange;
- (id)preferredAuthScheme;
- (void)setPreferredAuthScheme:(id)arg1;
- (id)_newConnection;
- (Class)connectionClass;
- (BOOL)requiresAuthentication;
- (id)authenticatedConnection;
- (id)certUIService;
- (id)defaultConnectionSettings;
- (void)applySettingsAsDefault:(id)arg1;
- (id)alternateConnectionSettings;
- (id)insecureConnectionSettings;
- (id)secureConnectionSettings;
- (BOOL)_shouldTryDirectSSLConnectionOnPort:(unsigned int)arg1;
- (id)customTitleForError:(id)arg1 authScheme:(id)arg2 defaultTitle:(id)arg3;
- (id)customTitleForAuthenticationError:(id)arg1 authScheme:(id)arg2 defaultTitle:(id)arg3;
- (id)customDescriptionForError:(id)arg1 authScheme:(id)arg2 defaultDescription:(id)arg3;
- (BOOL)isPasswordMissing;
- (void)reportAuthenticationError:(id)arg1 authScheme:(id)arg2;
- (BOOL)_connectAndAuthenticate:(id)arg1;
- (id)uniqueId;
- (id)syncStoreIdentifier;
- (id)nameForMailboxUid:(id)arg1;
- (BOOL)shouldEnableAfterError:(id)arg1;
- (BOOL)enableAccount;
- (BOOL)shouldDisplayHostnameInErrorMessages;
- (id)missingPasswordErrorWithTitle:(id)arg1;

@end

